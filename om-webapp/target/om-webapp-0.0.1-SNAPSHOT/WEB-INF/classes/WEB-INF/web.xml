<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>noPlan</display-name>
     
  	<!-- Spring Configurations -->
  
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring-services.xml</param-value>
    </context-param>
    
	<listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener> 
    
	<!-- Embedded H2 Definition -->
	
    <!-- listener>
    	<listener-class>org.h2.server.web.DbStarter</listener-class>
	</listener-->

    <context-param>
    	<param-name>db.url</param-name>
    	<param-value>jdbc:mysql://localhost/db_ordermanagement</param-value>
	</context-param>
	<context-param>
	    <param-name>db.user</param-name>
    	<param-value>root</param-value>
	</context-param>
	<context-param>
	    <param-name>db.password</param-name>
    	<param-value></param-value>
	</context-param>
	<context-param>
    	<param-name>db.tcpServer</param-name>
    	<param-value>-tcpAllowOthers</param-value>
	</context-param>
	
  
	<!-- Jersey API Servlet -->
	
	<servlet>
	    <servlet-name>jersey</servlet-name>
	
	    <servlet-class>
	        com.sun.jersey.spi.spring.container.servlet.SpringServlet
	    </servlet-class>
	
	    <init-param>
	        <param-name>com.sun.jersey.config.property.packages</param-name>
	        <param-value>com.noplan.services</param-value>
	    </init-param>
	    
	     <init-param>
	        <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
	        <param-value>true</param-value>
	    </init-param>
	
	    <load-on-startup>1</load-on-startup>
	    
	</servlet>

	<servlet-mapping>
	    <servlet-name>jersey</servlet-name>
	    <url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
	
	
	<!-- Spring Security Filter 

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/rest/*</url-pattern>
    </filter-mapping>-->

</web-app>